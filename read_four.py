from neural_net.nn import Neuron, NeuralNet, SIGMOID
from neural_net.trainer import train_until

training_data = [
    (
        '..X.X...' + 
        '..X.X...' + 
        '..XXX...' + 
        '....X...' + 
        '....X...' + 
        '........' + 
        '........',
        True
    ),
    (
        '........' +
        '...X....' + 
        '...X.X..' + 
        '...XXX..' + 
        '.....X..' + 
        '.....X..' + 
        '........',
        True
    ),
    (
        '.X..X...' +
        '.X..X...' + 
        '.X..X...' + 
        '.XXXX...' + 
        '....X...' + 
        '....X...' + 
        '........',
        True
    ),
    (
        '........' +
        '.X..X...' + 
        '.X..X...' + 
        '.XXXX...' + 
        '....X...' + 
        '....X...' + 
        '........',
        True
    ),
    (
        '........' +
        '.X......' + 
        '.X..X...' + 
        '.XXXX...' + 
        '....X...' + 
        '....X...' + 
        '........',
        True
    ),
    (
        '.X..X...' +
        '.X..X...' + 
        '.X..X...' + 
        '.XXXX...' + 
        '....X...' + 
        '....X...' + 
        '....X...',
        True
    ),
    (
        '........' +
        '........' + 
        '.X.X....' + 
        '.XXX....' + 
        '...X....' + 
        '...X....' + 
        '........',
        True
    ),

    (
        '........' +
        '..X.X...' + 
        '..X.X...' + 
        '..XXX...' + 
        '....X...' + 
        '....X...' + 
        '........',
        True
    ),
    (
        '........' +
        '........' +
        '.X......' + 
        '.X.X....' + 
        '.XXX....' + 
        '...X....' + 
        '...X....',
        True
    ),
    (
        '........' +
        '........' +
        '..X.....' + 
        '..X.X...' + 
        '..XXX...' + 
        '....X...' + 
        '....X...',
        True
    ),
    (
        '........' +
        '..X.....' + 
        '..X.X...' + 
        '..XXX...' + 
        '....X...' + 
        '....X...' + 
        '........',
        True
    ),
    (
        '........' +
        '..X..X..' + 
        '..X..X..' + 
        '..XXXX..' + 
        '.....X..' + 
        '.....X..' + 
        '........',
        True
    ),
    (
        '........' +
        '..X.....' + 
        '..X..X..' + 
        '..XXXX..' + 
        '.....X..' + 
        '.....X..' + 
        '........',
        True
    ),
    (
        '...X..X.' +
        '...X..X.' + 
        '...X..X.' + 
        '...XXXX.' + 
        '......X.' + 
        '......X.' + 
        '......X.',
        True
    ),
    (
        '..X..X..' +
        '..X..X..' + 
        '..X..X..' + 
        '..XXXX..' + 
        '.....X..' + 
        '.....X..' + 
        '.....X..',
        True
    ),
    (
        '..X.X...' + 
        '..XXX...' + 
        '....X...' + 
        '....X...' + 
        '........' +
        '........' +
        '........',
        True
    ),
    (
        '........' + 
        '..X.X...' + 
        '..XXX...' + 
        '....X...' + 
        '....X...' + 
        '........' +
        '........',
        True
    ),
    (
        '........' +
        '........' + 
        '..X.X...' + 
        '..XXX...' + 
        '....X...' + 
        '....X...' + 
        '........',
        True
    ),
    (
        '........' +
        '........' +
        '........' + 
        '..X.X...' + 
        '..XXX...' + 
        '....X...' + 
        '....X...',
        True
    ),

    ## NEGATIVE EXAMPLES
    (
        '..XXX...' + 
        '..XXX...' + 
        '..XXX...' + 
        '....X...' + 
        '....X...' + 
        '........' + 
        '........',
        False
    ),
    (
        '........' +
        '...XXX..' + 
        '...XXX..' + 
        '...XXX..' + 
        '.....X..' + 
        '.....X..' + 
        '........',
        False
    ),
    (
        '.XXXX...' +
        '.XXXX...' + 
        '.XXXX...' + 
        '.XXXX...' + 
        '....X...' + 
        '....X...' + 
        '........',
        False
    ),
    (
        '........' +
        '.XXXX...' + 
        '.XXXX...' + 
        '.XXXX...' + 
        '..XXX...' + 
        '..XXX...' + 
        '........',
        False
    ),
    (
        '........' +
        '.X......' + 
        '.XXXX...' + 
        '.XXXX...' + 
        '....X...' + 
        '....X...' + 
        '........',
        False
    ),
    (
        '.X..X...' +
        '.X..X...' + 
        '.X..X...' + 
        '.XXXX...' + 
        '.XXXX...' + 
        '.XXXX...' + 
        '....X...',
        False
    ),
    (
        '........' +
        '........' + 
        '.X.X....' + 
        '.XXX....' + 
        '.X.X....' + 
        '.X.X....' + 
        '........',
        False
    ),

    (
        '........' +
        '..X.X...' + 
        '..X.X...' + 
        'XXXXX...' + 
        '....X...' + 
        '....X...' + 
        '........',
        False
    ),
    (
        '.X......' +
        '.X......' +
        '.X......' + 
        '.XXXXX..' + 
        '.XXXXX..' + 
        '...X....' + 
        '...X....',
        False
    ),
    (
        '........' +
        '........' +
        '..X.....' + 
        'XXX.X...' + 
        '..XXX...' + 
        '....X...' + 
        '....X...',
        False
    ),
    (
        '........' +
        'XXX....X' + 
        '..XXX...' + 
        '..XXX...' + 
        '....X...' + 
        '....X...' + 
        '........',
        False
    ),
    (
        '........' +
        '..X..X..' + 
        '..XXXX..' + 
        '..XXXX..' + 
        'XXXXXX..' + 
        '.....X..' + 
        '........',
        False
    ),
    (
        '........' +
        '..XXXX..' + 
        '..X..X..' + 
        '..XXXX..' + 
        '.....X..' + 
        '....XX..' + 
        '........',
        False
    ),
    (
        '........' +
        '..XXXX..' + 
        '..X..X..' + 
        '..XXXX..' + 
        '..X.....' + 
        '..X.....' + 
        '..X.....',
        False
    ),
    (
        '.......X' +
        '..X.X...' + 
        '..X.....' + 
        '..X.X..X' + 
        '....X...' + 
        'X...X...' + 
        '........',
        False
    ),
    (
        '.X.....X' +
        '..XXX...' + 
        '....X...' + 
        '.X.XX...' + 
        '....X...' + 
        '..XXX.X.' + 
        '........',
        False
    ),
    (
        '........' +
        '..XXX...' + 
        '....X...' + 
        '...XX...' + 
        '....X...' + 
        '..XXX...' + 
        '........',
        False
    ),
    (
        'X.....X.' +
        '.X...X..' + 
        '..X.X...' + 
        '...X....' + 
        '..X.X...' + 
        '.X...X..' + 
        'X.....X.',
        False
    ),
    (
        'XXXXXXXX' +
        'XXXXXXXX' + 
        'XXXXXXXX' + 
        'XXXXXXXX' + 
        'XXXXXXXX' + 
        'XXXXXXXX' + 
        'XXXXXXXX',
        False
    ),
    (
        '........' +
        '........' + 
        '........' + 
        '........' + 
        '........' + 
        '........' + 
        '........',
        False
    ),
    (
        'X....X..' +
        '.X......' + 
        '.....X..' + 
        '..X.....' + 
        '..X.....' + 
        'X......X' + 
        '........',
        False
    )
]

def chunks(l, n):
    for i in range(0, len(l), n):
        yield l[i:i + n]

def image_to_input(image):
    return [-1.0 if c == '.' else 1.0 for c in image]

nn_training_data = [(image_to_input(image), [1] if result else [-1]) for (image, result) in training_data]

#works well!
nn = NeuralNet(56, 1, [9], sigmoid_s=-0.5)

print nn

def to_digit_list(string):
    return [int(ch) for ch in string]

def to_digit_string(number, num_digits):
    return ('{0:0' + str(num_digits) + 'b}').format(number)

train_until(nn, nn_training_data, initial_step=0.1, threshold=0.5)

test_data = [
    (
        '........' +
        '........' +
        '..X.....' + 
        '..X.X...' + 
        '..XXX...' + 
        '....X...' + 
        '....X...',
        True
    ), (
        '........' +
        '........' +
        '..XXX...' + 
        '..X.X...' + 
        '..XXX...' + 
        '..X.X...' + 
        '..XXX...',
        False
    ), (
        '........' +
        '...X....' + 
        '...X.X..' + 
        '...XXX..' + 
        '.....X..' + 
        '.....X..' + 
        '........',
        True
    ), (
        '........' +
        '........' + 
        '.....X..' + 
        '....XX..' + 
        '.....X..' + 
        '.....X..' + 
        '........',
        False,
    ), (
        '........' +
        '.XXXXXX.' + 
        '.X......' + 
        '.X.X....' + 
        '.XXX....' + 
        '...X....' + 
        '...X....',
        False
    ), (
        '........' +
        '.X......' + 
        '.X......' + 
        '.X.X....' + 
        '.XXX....' + 
        '...X....' + 
        '...X....',
        True
    ), (
        '........' +
        '.X......' + 
        '.XX.....' + 
        '.XXX....' + 
        '.XXX....' + 
        '...XX...' + 
        '...X.X..',
        False
    ), (
        '........' +
        '..X.....' + 
        '..X.X...' + 
        '..XXX...' + 
        '....X...' + 
        '....X...' + 
        '........',
        True
    ), (
        '........' +
        '..X.....' + 
        '..X.X...' + 
        '..XXX...' + 
        '.X..X...' + 
        'XXXXX...' + 
        '........',
        False
    ), (
        '........' +
        '........' + 
        '..X.X...' + 
        '..X.X...' + 
        '..XXX...' + 
        '....X...' + 
        '....X...',
        True
    ), (
        '........' +
        '........' + 
        '..X.X...' + 
        '..X.X...' + 
        '..XXX...' + 
        '........' + 
        '........',
        False
    ), (
        '........' +
        '.X......' + 
        '.X..X...' + 
        '.X..X...' + 
        '.XXXX...' + 
        '....X...' + 
        '........',
        True
    ), (
        '........' +
        '.X......' + 
        '....X...' + 
        '....X...' + 
        '..XXX...' + 
        '....X...' + 
        '........',
        False
    ), (
        '...XX...' +
        '..XXXX..' + 
        '...XX...' + 
        '..XXXX..' + 
        '...XX...' + 
        'X..XX...' + 
        'X..X....',
        False
    ), (
        '........' +
        '...XX...' +
        '..X..X..' + 
        '...XX...' + 
        '..X..X..' + 
        '...XX...' + 
        '........',
        False
    ), (
        'XXXXXXXX' +
        'X......X' + 
        'X......X' + 
        'X......X' + 
        'X......X' + 
        'X......X' + 
        'XXXXXXXX',
        False
    ), (
        '........' +
        '........' + 
        '........' + 
        '........' + 
        '........' + 
        '........' + 
        '........',
        False
    ), (
        'XX...X..' +
        '........' + 
        '.....X..' + 
        '..X.....' + 
        '..X.....' + 
        '.......X' + 
        'XX......',
        False
    )
]

for i in range(len(test_data)):
    (image, result) = test_data[i]
    print '\n'.join(list(chunks(image, 8)))
    print '\n=\n'
    print nn.intake(image_to_input(image))
    print '\n'

nn_testing_data = [(image_to_input(image), [1] if result else [-1]) for (image, result) in test_data]
print 'test_squared_error', nn.get_training_data_squared_error(nn_testing_data)